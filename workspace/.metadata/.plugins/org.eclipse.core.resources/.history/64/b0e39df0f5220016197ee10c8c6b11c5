#include <stdlib.h>
#include <stdio.h>
#include <stdint.h>
#include <string.h>
#include <commons/config.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>
#include <sockets.h>
#include <estructuras.h>
#define PORT "8100"

/*void *get_in_addr(struct sockaddr *sa) {
 if (sa->sa_family == AF_INET) {
 return &(((struct sockaddr_in*) sa)->sin_addr);
 }

 return &(((struct sockaddr_in6*) sa)->sin6_addr);
 }*/

int main(int argc, char* argv[]) {
	if (argc != 2) {
		printf("Cantidad Invalida de argumentos\n");
		return 1;
	}
	t_config* cfgUMC = config_create(argv[1]);
	//int tamanio_mp = (config_get_int_value(cfgUMC, "TAMAÑO_FRAME"))
		//	* (config_get_int_value(cfgUMC, "CANT_FRAMES"));

	struct sockaddr_in direccionServidor;
	int socketServ= crearServer(&direccionServidor,config_get_int_value(cfgUMC,"PUERTO_UMC"));
	if (bind(socketServ, (void*) &direccionServidor, sizeof(direccionServidor))
				!= 0) {
			perror("Falló el bind");
			return 1;
		}
	listen(socketServ,100);
	printf("Estoy Escuchando");
	int cliente;
		cliente=recibirCliente(socketServ);
		printf("Nuevo Cliente: %d",cliente);



	return 0;
}

